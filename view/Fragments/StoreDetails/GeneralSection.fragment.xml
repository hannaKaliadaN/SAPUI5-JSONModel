<core:FragmentDefinition xmlns="sap.m"
    xmlns:f="sap.ui.layout.form"
    xmlns:core="sap.ui.core">
    <f:SimpleForm editable="true" layout="ColumnLayout" labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false">
        <f:content>
            <Label text="{i18n>labelEmail}" class="sapUiNoContentPadding" />
            <Text text="{Email}" class="sapUiNoContentPadding" visible="{= !${/isEdit}}" />
            <Input required="{/isEdit}" fieldGroupIds="storeDetailsInput" value="{
                path: 'Email',
                type: 'sap.ui.model.type.String',
                constraints: {
                    search: '^\\w+[\\w-+\\.]*\\@\\w+([-\\.]\\w+)*\\.[a-zA-Z]{2,}$',
                    minimum: 3
                }}" visible="{/isEdit}" change=".onChangeInput" name="Email"/>
            <Label text="{i18n>labelPhoneNumber}" />
            <Text text="{PhoneNumber}" visible="{= !${/isEdit}}" />
            <MaskInput required="{/isEdit}" fieldGroupIds="storeDetailsInput" value="{path: 'PhoneNumber',
                    type: 'sap.ui.model.type.String', 
                    constraints: {
                        minLength: 3
                        }
                 }" mask="(999) 99 999 99 99" name="PhoneNumber" change=".onChangeInput" visible="{/isEdit}" placeholderSymbol="_" showClearIcon="true">
                <rules>
                    <MaskInputRule maskFormatSymbol="C" regex="[0-9]" />
                </rules>
            </MaskInput>
            <Label text="{i18n>labelAddress}" />
            <Text text="{Address}" visible="{= !${/isEdit}}" />
            <Input required="{/isEdit}" fieldGroupIds="storeDetailsInput" visible="{/isEdit}" value="{
                path: 'Address',
                type: 'sap.ui.model.type.String',
                constraints: {
                    maxLength: 100,
                    minLength: 3
                    }
                }" name="Address" change=".onChangeInput" />
            <Label text="{i18n>labelEstablished}" />
            <Text text="{
                path: 'Established',
                type: 'sap.ui.model.type.Date',
                formatOptions: {
                    style: 'medium',
                    source: {
                        pattern: 'yyyy - MM - dd'
                    }
                }
            }" wrapping="false" visible="{= !${/isEdit}}" validationError="onChangeInput" />
            <DatePicker fieldGroupIds="storeDetailsInput" value="{
                path: 'Established',
                type: 'sap.ui.model.type.Date',
                formatOptions: {
                    style: 'medium',
                    source: {
                        pattern: 'yyyy - MM - dd'
                    },
                    formatOptions: {
                        style: 'short'
                    }
                }
            }" change=".onChangeInput" name="Established" visible="{/isEdit}" />
            <Label text="{i18n>labelFloor}" />
            <Text text="{FloorArea}" visible="{= !${/isEdit}}" />
            <Input fieldGroupIds="storeDetailsInput" visible="{/isEdit}" value="{
                path: 'FloorArea',
                type: 'sap.ui.model.type.Float'
                }" change=".onChangeInput" name="FloorArea" />
            <Label text="{i18n>labelStatus}" />
            <Text text="{Status}" visible="{= !${/isEdit}}" />
            <Select selectedKey='{Status}' visible="{/isEdit}" forceSelection="false" resetOnMissingKey='true'>
                <core:Item key="Open" text="{i18n>selectItemStatusOpen}" />
                <core:Item key="Close" text="{i18n>selectItemStatusClose}" />
            </Select>
        </f:content>
    </f:SimpleForm>
</core:FragmentDefinition>